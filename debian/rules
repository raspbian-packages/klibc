#!/usr/bin/make -f

# let debhelper be verbose
#export DH_VERBOSE=1

include /usr/share/dpkg/architecture.mk

# klibc architecture names mostly match Debian CPU names.  This is
# overrridden as necessary.
KLIBCARCH := $(patsubst %el,%,$(DEB_HOST_ARCH_CPU))

ifneq (,$(filter amd64 x32,$(DEB_HOST_ARCH)))
KLIBCARCH := x86_64
endif
ifeq ($(DEB_HOST_ARCH),armel)
KLIBC_MAKEFLAGS := CONFIG_AEABI=y
endif
ifeq ($(DEB_HOST_ARCH),armhf)
KLIBC_MAKEFLAGS := CONFIG_AEABI=y CPU_ARCH=armv7-a+fp CPU_TUNE=cortex-a8 CONFIG_KLIBC_THUMB=y
endif
ifeq ($(DEB_HOST_ARCH),hppa)
KLIBCARCH := parisc
endif
ifneq (,$(filter powerpc%,$(DEB_HOST_ARCH)))
KLIBCARCH := ppc
endif
ifeq ($(DEB_HOST_ARCH),sh4)
KLIBCARCH := sh
endif

KLIBC_MAKEFLAGS := INSTALLROOT=debian/tmp ARCH=$(KLIBCARCH) $(KLIBC_MAKEFLAGS)

ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
    KLIBC_MAKEFLAGS += CROSS_COMPILE=$(DEB_HOST_GNU_TYPE)-
endif


# Enable this to get verbose build information
KLIBC_MAKEFLAGS += KBUILD_VERBOSE=1

# Defer stripping of debug symbols to debhelper
KLIBC_MAKEFLAGS += CONFIG_DEBUG_INFO=y

%:
	dh $@ --link-doc=libklibc

override_dh_auto_build:
	rm -rf linux
	mkdir -p linux/include
	for x in /usr/include/linux /usr/include/asm-generic \
		/usr/include/$(DEB_HOST_MULTIARCH)/asm; do \
		ln -s $${x} linux/include || exit; \
	done
	$(MAKE) all $(KLIBC_MAKEFLAGS)

override_dh_auto_clean:
	rm -rf linux test-*.log
	MAKEFLAGS="$(KLIBC_MAKEFLAGS)" dh_auto_clean

override_dh_auto_install:
	$(MAKE) install $(KLIBC_MAKEFLAGS)
# Replace kernel UAPI header copies with links
	for x in /usr/include/linux /usr/include/asm-generic \
		/usr/include/$(DEB_HOST_MULTIARCH)/asm; do \
		rm -rf debian/tmp/usr/lib/klibc/include/$$(basename $${x}) \
		&& ln -s $${x} debian/tmp/usr/lib/klibc/include/ \
		|| exit; \
	done

define run_test_program
usr/klibc/tests/$(1) > test-$(1).log
! grep -qw ERROR test-$(1).log
$(if $(2),grep -qF -- $(2) test-$(1).log)
$(if $(3),grep -qF -- $(3) test-$(1).log)
endef

comma=,

override_dh_auto_test:
ifeq ($(filter nocheck,$(DEB_BUILD_OPTIONS)),)
	$(MAKE) test $(KLIBC_MAKEFLAGS)
	$(call run_test_program,microhello)
	$(call run_test_program,minihello)
	$(call run_test_program,hello)
	$(call run_test_program,environ,'Verifying envp == environ... ok')
	$(call run_test_program,fcntl)
	$(call run_test_program,malloctest)
	$(call run_test_program,malloctest2)
	$(call run_test_program,opentest,"Line 1 = $$(head -1 /etc/passwd)")
	$(call run_test_program,pipetest)
	$(call run_test_program,select)
	$(call run_test_program,setjmptest,"calling longjmp with 256... setjmp returned 256")
	$(call run_test_program,sigint,"Signal received OK")
	$(call run_test_program,socket)
	$(call run_test_program,sscanf)
	$(call run_test_program,stdio,"Hello$(comma) World!","Hello again - and some more - and some more")
	$(call run_test_program,strlcpycat)
	$(call run_test_program,vfork)
	usr/dash/static/sh -c "exit"
	usr/dash/static/sh -c "usr/utils/static/true; exit"
endif

override_dh_fixperms:
	dh_fixperms -X.so

override_dh_strip:
	dh_strip -pklibc-utils -plibklibc
	dh_strip -plibklibc-dev -X.so
